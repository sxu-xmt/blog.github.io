<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shineme的博客</title>
  
  
  <link href="https://shineme.ltd/atom.xml" rel="self"/>
  
  <link href="https://shineme.ltd/"/>
  <updated>2021-06-17T11:02:23.965Z</updated>
  <id>https://shineme.ltd/</id>
  
  <author>
    <name>Shineme</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 作业</title>
    <link href="https://shineme.ltd/2021/06/17/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://shineme.ltd/2021/06/17/%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2021-06-17T07:30:55.000Z</published>
    <updated>2021-06-17T11:02:23.965Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>   <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />    <meta name="viewport" content="user-scalable=no"><style type="text/css">img{ border:none}</style></head><body><h1 style="background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  font-weight: 650; text-align:center;color: #1eb3b1;   position:relative;  border-radius:10px;z-index:9999">Python作业</h1><h3 style="background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  text-align:center;color: #1eb3b1;   position:relative;  border-radius:10px;z-index:9999"><strong>姓名：</strong>高春春 &nbsp <strong>学号：</strong>201802701206&nbsp </h3>    <div>        <button onclick=" window.location.href = 'https://www.lanqiao.cn/courses/reports/1534139'"                style="background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  font-weight: 548; color: #1eb3b1; width: 80%; height: 120px; position:relative; border: 3px solid #1eb3b1; border-radius:10px;left:10%;right: 8%;z-index:9999;"> Python + 高德 API 实现地图找房        </button>    </div>    <div>        <button onclick=" window.location.href = 'https://www.lanqiao.cn/courses/reports/1534111'"                style="background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  font-weight: 548; color: #1eb3b1; width: 80%; height: 120px; position:relative ; border: 3px solid #1eb3b1; border-radius:10px;left:10%;right: 8%;z-index:9999;"> Python 识别登录验证码        </button>    </div>    <div>        <button onclick=" window.location.href = 'https://www.lanqiao.cn/courses/reports/1534142'"                style="background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  font-weight: 548; color: #1eb3b1; width: 80%; height: 120px; position:relative; border: 3px solid #1eb3b1; border-radius:10px;left:10%;right: 8%;z-index:9999;"> Python 实现简单 Web 服务器        </button>    </div>    <div>        <button onclick=" window.location.href = 'https://www.lanqiao.cn/courses/reports/1534817'"                style="background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  font-weight: 548; color: #1eb3b1; width: 80%; height: 120px; position:relative ; border: 3px solid #1eb3b1; border-radius:10px;left:10%;right: 8%;z-index:9999;"> Python 实现简易浏览器 (Qt速览)        </button>    </div>    <div>        <button onclick=" window.location.href = 'https://www.lanqiao.cn/courses/reports/1534798'"                style="background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  font-weight: 548; color: #1eb3b1; width: 80%; height: 120px; position: relative; border: 3px solid #1eb3b1; border-radius:10px;left:10%;right: 8%;z-index:9999;"> Python 实现简易浏览器 (实现浏览器)        </button>    </div>    <div>        <button onclick=" window.location.href = 'https://www.lanqiao.cn/courses/reports/1533845'"                style="background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  font-weight: 548; color: #1eb3b1; width: 80%; height: 120px; position: relative; border: 3px solid #1eb3b1; border-radius:10px;left:10%;right: 8%;z-index:9999;"> Python 实现三维建模工具（上）        </button>    </div>    <div>        <button onclick=" window.location.href = 'https://www.lanqiao.cn/courses/reports/1534737'"                style="background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  font-weight: 548; color: #1eb3b1; width: 80%; height: 120px; position: relative; border: 3px solid #1eb3b1; border-radius:10px;left:10%;right: 8%;z-index:9999;"> Python 实现三维建模工具（下）        </button>    </div>    <div>        <button onclick=" window.location.href = 'https://www.lanqiao.cn/courses/reports/1531673/'"                style="background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  font-weight: 548; color: #1eb3b1; width: 80%; height: 120px; position: relative; border: 3px solid #1eb3b1; border-radius:10px;left:10%;right: 8%;z-index:9999;"> Python 实现图片转字符画        </button>    </div>    <div>        <button onclick=" window.location.href = 'https://www.lanqiao.cn/courses/reports/1534723'"                style="background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  font-weight: 548; color: #1eb3b1; width: 80%; height: 120px; position: relative; border: 3px solid #1eb3b1; border-radius:10px;left:10%;right: 8%;z-index:9999;"> Python 实现文本解析器        </button><pre><code>    &lt;button onclick=&quot; window.location.href = &#39;https://www.lanqiao.cn/courses/reports/1534469&#39;&quot;            style=&quot;background: #FFFFFF;font-size: 43px;margin-top: 45px;letter-spacing: 0px;  font-weight: 548; color: #1eb3b1; width: 80%; height: 120px; position: relative; border: 3px solid #1eb3b1; border-radius:10px;left:10%;right: 8%;z-index:9999;&quot;&gt; Python 预测 NBA 比赛结果    &lt;/button&gt;&lt;/div&gt;</code></pre><script type="text/javascript" src="css.css"></script></body></html>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
&lt;head&gt;
   &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/</summary>
      
    
    
    
    
    <category term="python" scheme="https://shineme.ltd/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>实现三维建模工具”实验报告</title>
    <link href="https://shineme.ltd/2021/06/14/%E5%AE%9E%E7%8E%B0%E4%B8%89%E7%BB%B4%E5%BB%BA%E6%A8%A1%E5%B7%A5%E5%85%B7%E2%80%9D%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    <id>https://shineme.ltd/2021/06/14/%E5%AE%9E%E7%8E%B0%E4%B8%89%E7%BB%B4%E5%BB%BA%E6%A8%A1%E5%B7%A5%E5%85%B7%E2%80%9D%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/</id>
    <published>2021-06-14T08:12:28.000Z</published>
    <updated>2021-06-17T07:41:10.292Z</updated>
    
    <content type="html"><![CDATA[<p>#Python 实现三维建模工具</p><span id="more"></span><p>##一、内容介绍<br>人类是那么得有创造力，我们创造、发明、设计、生产了一切大自然没有直接给予我们的东西使我们的生活变得更轻松更美好。在过去，我们只能在图纸上进行产品的创造与设计，而现在，有了计算机的帮助，有了 CAD（计算机辅助设计）软件，大大节省了我们的精力与时间成本，使我们的工作更高效，能够拥有更多时间去思考设计本身。<br>那么 CAD 软件是如何写出来的呢？CAD 软件种类繁多，但它们有一个共同的特点，就是对三维世界的建模，对三维世界中物体的控制，对三维设计的展示。<br>课程知识点<br>本课程项目完成过程中，我们将学习：<br>    OpenGL 坐标系的转换<br>    实现简单的用户输入事件回调机制<br>    设计模式中组合模式的使用<br>    基于包围盒的碰撞检测</p><p>##二、实现原理及步骤<br>###1.变换矩阵<br>在计算机图形学中，常常需要使用到不同的坐标系，比如世界坐标系、摄像机坐标系、视图坐标系等。坐标系之间的转换需要用到变换矩阵。我们可以不理会矩阵的细节，而将其看作一个函数，变换前的点的坐标作为函数的参数，通过这个公式：1-2.3-1 我们就可以得到坐标系变换后的点的坐标了。虽然说是坐标系变换，其实只要认为坐标系是“固定不动”的，就可以看成是坐标系中的物体在坐标系中变换了。移动、旋转、缩放被称作仿射变换，其对应矩阵就是令物体在坐标系中变换使用的。</p><p>###2.OpenGL 坐标系的转换<br>一个 3D 模型映射到屏幕上会经过 5 次空间变换，如下图漫画所示，左上角为起始点：<img data-src="https://doc.shiyanlou.com/document-uid8834labid1886timestamp1466384231798.png" alt="图片描述"><br>漫画右半部分的坐标系转换基本可以通过 OpenGL 自带的函数帮助我们处理，从摄像机坐标系到齐次裁减坐标系的矩阵转换由 gluPerspective 函数调用完成，到视图坐标系的矩阵转换由 glViewport 函数调用完成。转换矩阵最终会存在 GL_PROJECTION 中，在本项目中，不需要了解这方面的细节内容。</p><p>当然，漫画左半部分的坐标系转换就需要我们自己处理了，从对象坐标系到摄像机坐标系的转换矩阵称作 ModelView 矩阵。</p><p>##三、源代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line">   <span class="keyword">from</span> OpenGL.GL <span class="keyword">import</span> glCallList, glClear, glClearColor, glColorMaterial, glCullFace, glDepthFunc, glDisable, glEnable,\</span><br><span class="line">                         glFlush, glGetFloatv, glLightfv, glLoadIdentity, glMatrixMode, glMultMatrixf, glPopMatrix, \</span><br><span class="line">                         glPushMatrix, glTranslated, glViewport, \</span><br><span class="line">                         GL_AMBIENT_AND_DIFFUSE, GL_BACK, GL_CULL_FACE, GL_COLOR_BUFFER_BIT, GL_COLOR_MATERIAL, \</span><br><span class="line">                         GL_DEPTH_BUFFER_BIT, GL_DEPTH_TEST, GL_FRONT_AND_BACK, GL_LESS, GL_LIGHT0, GL_LIGHTING, \</span><br><span class="line">                         GL_MODELVIEW, GL_MODELVIEW_MATRIX, GL_POSITION, GL_PROJECTION, GL_SPOT_DIRECTION</span><br><span class="line">   <span class="keyword">from</span> OpenGL.constants <span class="keyword">import</span> GLfloat_3, GLfloat_4</span><br><span class="line">   <span class="keyword">from</span> OpenGL.GLU <span class="keyword">import</span> gluPerspective, gluUnProject</span><br><span class="line">   <span class="keyword">from</span> OpenGL.GLUT <span class="keyword">import</span> glutCreateWindow, glutDisplayFunc, glutGet, glutInit, glutInitDisplayMode, \</span><br><span class="line">                           glutInitWindowSize, glutMainLoop, \</span><br><span class="line">                           GLUT_SINGLE, GLUT_RGB, GLUT_WINDOW_HEIGHT, GLUT_WINDOW_WIDTH, glutCloseFunc</span><br><span class="line">   <span class="keyword">import</span> numpy</span><br><span class="line">   <span class="keyword">from</span> numpy.linalg <span class="keyword">import</span> norm, inv</span><br><span class="line">   <span class="keyword">import</span> random</span><br><span class="line">   <span class="keyword">from</span> OpenGL.GL <span class="keyword">import</span> glBegin, glColor3f, glEnd, glEndList, glLineWidth, glNewList, glNormal3f, glVertex3f, \</span><br><span class="line">                         GL_COMPILE, GL_LINES, GL_QUADS</span><br><span class="line">   <span class="keyword">from</span> OpenGL.GLU <span class="keyword">import</span> gluDeleteQuadric, gluNewQuadric, gluSphere</span><br><span class="line"></span><br><span class="line">   <span class="keyword">import</span> color</span><br><span class="line">   <span class="keyword">from</span> scene <span class="keyword">import</span> Scene</span><br><span class="line">   <span class="keyword">from</span> primitive <span class="keyword">import</span> init_primitives, G_OBJ_PLANE</span><br><span class="line">   <span class="keyword">from</span> node <span class="keyword">import</span> Sphere, Cube, SnowFigure</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">Viewer</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">           <span class="string">&quot;&quot;&quot; Initialize the viewer. &quot;&quot;&quot;</span></span><br><span class="line">           <span class="comment">#初始化接口，创建窗口并注册渲染函数</span></span><br><span class="line">           self.init_interface()</span><br><span class="line">           <span class="comment">#初始化opengl的配置</span></span><br><span class="line">           self.init_opengl()</span><br><span class="line">           <span class="comment">#初始化3d场景</span></span><br><span class="line">           self.init_scene()</span><br><span class="line">           <span class="comment">#初始化交互操作相关的代码</span></span><br><span class="line">           self.init_interaction()</span><br><span class="line">           init_primitives()</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">init_interface</span>(<span class="params">self</span>):</span></span><br><span class="line">           <span class="string">&quot;&quot;&quot; 初始化窗口并注册渲染函数 &quot;&quot;&quot;</span></span><br><span class="line">           glutInit()</span><br><span class="line">           glutInitWindowSize(<span class="number">640</span>, <span class="number">480</span>)</span><br><span class="line">           glutCreateWindow(<span class="string">&quot;3D Modeller&quot;</span>)</span><br><span class="line">           glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)</span><br><span class="line">           <span class="comment">#注册窗口渲染函数</span></span><br><span class="line">           glutDisplayFunc(self.render)</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">init_opengl</span>(<span class="params">self</span>):</span></span><br><span class="line">           <span class="string">&quot;&quot;&quot; 初始化opengl的配置 &quot;&quot;&quot;</span></span><br><span class="line">           <span class="comment">#模型视图矩阵</span></span><br><span class="line">           self.inverseModelView = numpy.identity(<span class="number">4</span>)</span><br><span class="line">           <span class="comment">#模型视图矩阵的逆矩阵</span></span><br><span class="line">           self.modelView = numpy.identity(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">           <span class="comment">#开启剔除操作效果</span></span><br><span class="line">           glEnable(GL_CULL_FACE)</span><br><span class="line">           <span class="comment">#取消对多边形背面进行渲染的计算（看不到的部分不渲染）</span></span><br><span class="line">           glCullFace(GL_BACK)</span><br><span class="line">           <span class="comment">#开启深度测试</span></span><br><span class="line">           glEnable(GL_DEPTH_TEST)</span><br><span class="line">           <span class="comment">#测试是否被遮挡，被遮挡的物体不予渲染</span></span><br><span class="line">           glDepthFunc(GL_LESS)</span><br><span class="line">           <span class="comment">#启用0号光源</span></span><br><span class="line">           glEnable(GL_LIGHT0)</span><br><span class="line">           <span class="comment">#设置光源的位置</span></span><br><span class="line">           glLightfv(GL_LIGHT0, GL_POSITION, GLfloat_4(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>))</span><br><span class="line">           <span class="comment">#设置光源的照射方向</span></span><br><span class="line">           glLightfv(GL_LIGHT0, GL_SPOT_DIRECTION, GLfloat_3(<span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>))</span><br><span class="line">           <span class="comment">#设置材质颜色</span></span><br><span class="line">           glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE)</span><br><span class="line">           glEnable(GL_COLOR_MATERIAL)</span><br><span class="line">           <span class="comment">#设置清屏的颜色</span></span><br><span class="line">           glClearColor(<span class="number">0.4</span>, <span class="number">0.4</span>, <span class="number">0.4</span>, <span class="number">0.0</span>)</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">init_scene</span>(<span class="params">self</span>):</span></span><br><span class="line">           <span class="comment">#创建一个场景实例</span></span><br><span class="line">           self.scene = Scene()</span><br><span class="line">           <span class="comment">#初始化场景内的对象</span></span><br><span class="line">           self.create_sample_scene()</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">create_sample_scene</span>(<span class="params">self</span>):</span></span><br><span class="line">           cube_node = Cube()</span><br><span class="line">           cube_node.translate(<span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">           cube_node.color_index = <span class="number">1</span></span><br><span class="line">           self.scene.add_node(cube_node)</span><br><span class="line"></span><br><span class="line">           sphere_node = Sphere()</span><br><span class="line">           sphere_node.translate(-<span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">           sphere_node.color_index = <span class="number">3</span></span><br><span class="line">           self.scene.add_node(sphere_node)</span><br><span class="line"></span><br><span class="line">           hierarchical_node = SnowFigure()</span><br><span class="line">           hierarchical_node.translate(-<span class="number">2</span>, <span class="number">0</span>, -<span class="number">2</span>)</span><br><span class="line">           self.scene.add_node(hierarchical_node)</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">init_interaction</span>(<span class="params">self</span>):</span></span><br><span class="line">           <span class="comment">#初始化交互操作相关的代码，之后实现</span></span><br><span class="line">           <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">main_loop</span>(<span class="params">self</span>):</span></span><br><span class="line">           <span class="comment">#程序主循环开始</span></span><br><span class="line">           glutMainLoop()</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">render</span>(<span class="params">self</span>):</span></span><br><span class="line">           <span class="comment">#初始化投影矩阵</span></span><br><span class="line">           self.init_view()</span><br><span class="line"></span><br><span class="line">           <span class="comment">#启动光照</span></span><br><span class="line">           glEnable(GL_LIGHTING)</span><br><span class="line">           <span class="comment">#清空颜色缓存与深度缓存</span></span><br><span class="line">           glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)</span><br><span class="line"></span><br><span class="line">           <span class="comment">#设置模型视图矩阵，这节课先用单位矩阵就行了。</span></span><br><span class="line">           glMatrixMode(GL_MODELVIEW)</span><br><span class="line">           glPushMatrix()</span><br><span class="line">           glLoadIdentity()</span><br><span class="line"></span><br><span class="line">           <span class="comment">#渲染场景</span></span><br><span class="line">           self.scene.render()</span><br><span class="line"></span><br><span class="line">           <span class="comment">#每次渲染后复位光照状态</span></span><br><span class="line">           glDisable(GL_LIGHTING)</span><br><span class="line">           glCallList(G_OBJ_PLANE)</span><br><span class="line">           glPopMatrix()</span><br><span class="line">           <span class="comment">#把数据刷新到显存上</span></span><br><span class="line">           glFlush()</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">init_view</span>(<span class="params">self</span>):</span></span><br><span class="line">           <span class="string">&quot;&quot;&quot; 初始化投影矩阵 &quot;&quot;&quot;</span></span><br><span class="line">           xSize, ySize = glutGet(GLUT_WINDOW_WIDTH), glutGet(GLUT_WINDOW_HEIGHT)</span><br><span class="line">           <span class="comment">#得到屏幕宽高比</span></span><br><span class="line">           aspect_ratio = <span class="built_in">float</span>(xSize) / <span class="built_in">float</span>(ySize)</span><br><span class="line"></span><br><span class="line">           <span class="comment">#设置投影矩阵</span></span><br><span class="line">           glMatrixMode(GL_PROJECTION)</span><br><span class="line">           glLoadIdentity()</span><br><span class="line"></span><br><span class="line">           <span class="comment">#设置视口，应与窗口重合</span></span><br><span class="line">           glViewport(<span class="number">0</span>, <span class="number">0</span>, xSize, ySize)</span><br><span class="line">           <span class="comment">#设置透视，摄像机上下视野幅度70度</span></span><br><span class="line">           <span class="comment">#视野范围到距离摄像机1000个单位为止。</span></span><br><span class="line">           gluPerspective(<span class="number">70</span>, aspect_ratio, <span class="number">0.1</span>, <span class="number">1000.0</span>)</span><br><span class="line">           <span class="comment">#摄像机镜头从原点后退15个单位</span></span><br><span class="line">           glTranslated(<span class="number">0</span>, <span class="number">0</span>, -<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">       viewer = Viewer()</span><br><span class="line">       viewer.main_loop()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;#Python 实现三维建模工具&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>四六级答案</title>
    <link href="https://shineme.ltd/2021/06/12/%E5%9B%9B%E5%85%AD%E7%BA%A7%E7%AD%94%E6%A1%88/"/>
    <id>https://shineme.ltd/2021/06/12/%E5%9B%9B%E5%85%AD%E7%BA%A7%E7%AD%94%E6%A1%88/</id>
    <published>2021-06-12T04:58:20.000Z</published>
    <updated>2021-06-12T05:12:20.571Z</updated>
    
    <content type="html"><![CDATA[<p>(点👉)<a href="http://mp.weixin.qq.com/s?__biz=Mzk0NDE4MjM5Mg==&mid=100000027&idx=1&sn=12da22c15d1a069b5b3f617d0859d699&chksm=4329c40c745e4d1a8fc9ba94c1739750ca362e983aeec87d2246292c0e5b50b5a4f658b63d6c&mpshare=1&scene=23&srcid=0612AdTe5l0FxaVNLwgFefgs&sharer_sharetime=1623473761114&sharer_shareid=607d95b460436718ba01b46fbb316f57#rd">四级答案</a><br>下午六级结束会有六级答案</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;(点👉)&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzk0NDE4MjM5Mg==&amp;mid=100000027&amp;idx=1&amp;sn=12da22c15d1a069b5b3f617d0859d699&amp;chksm=4329c40c745e</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>python</title>
    <link href="https://shineme.ltd/2021/06/01/python/"/>
    <id>https://shineme.ltd/2021/06/01/python/</id>
    <published>2021-06-01T07:16:06.000Z</published>
    <updated>2021-06-01T07:38:33.073Z</updated>
    
    <content type="html"><![CDATA[<p>###练习<br>##请设计一个decorator，它可以作用域任何函数上，并打印该函数的执行时间：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding：UTF-8-*-</span></span><br><span class="line">import time, functols</span><br><span class="line">def metric(fn);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s executed inf %s ms&#x27;</span>%(fn._name_, 10.24))</span><br><span class="line"><span class="built_in">return</span> fn</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;###练习&lt;br&gt;##请设计一个decorator，它可以作用域任何函数上，并打印该函数的执行时间：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;lin</summary>
      
    
    
    
    
    <category term="python" scheme="https://shineme.ltd/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>发文章步骤</title>
    <link href="https://shineme.ltd/2021/05/28/%E5%8F%91%E6%96%87%E7%AB%A0%E6%AD%A5%E9%AA%A4/"/>
    <id>https://shineme.ltd/2021/05/28/%E5%8F%91%E6%96%87%E7%AB%A0%E6%AD%A5%E9%AA%A4/</id>
    <published>2021-05-28T12:57:09.000Z</published>
    <updated>2021-05-28T12:58:40.158Z</updated>
    
    <content type="html"><![CDATA[<h2 id="发文章的步骤"><a href="#发文章的步骤" class="headerlink" title="发文章的步骤"></a>发文章的步骤</h2><span id="more"></span><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;发文章的步骤&quot;&gt;&lt;a href=&quot;#发文章的步骤&quot; class=&quot;headerlink&quot; title=&quot;发文章的步骤&quot;&gt;&lt;/a&gt;发文章的步骤&lt;/h2&gt;</summary>
    
    
    
    
    <category term="技能" scheme="https://shineme.ltd/tags/%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>第一篇blog</title>
    <link href="https://shineme.ltd/2021/05/28/%E7%AC%AC%E4%B8%80%E7%AF%87blog/"/>
    <id>https://shineme.ltd/2021/05/28/%E7%AC%AC%E4%B8%80%E7%AF%87blog/</id>
    <published>2021-05-28T12:55:42.000Z</published>
    <updated>2021-05-28T12:56:32.854Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到<a href="https://shineme.ltd/">Shineme的世界</a>，这里是我的博客，也欢迎小伙伴们访问我的<a href="http://xmt.shineme.ltd/">个人主页</a> or you can ask me on <a href="https://github.com/xmt3061123">GitHub</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;欢迎来到&lt;a href=&quot;https://shineme.ltd/&quot;&gt;Shineme的世界&lt;/a&gt;，这里是我的博客，也欢迎小伙伴们访问我的&lt;a href=&quot;http://xmt.shineme.ltd/&quot;&gt;个人主页&lt;/a&gt; or you can ask me on &lt;a h</summary>
      
    
    
    
    
    <category term="生活" scheme="https://shineme.ltd/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
